generator prisma_client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = "***"
}

model Author {
  id    Int              @id @default(autoincrement())
  name  String
  books AuthorsOnBooks[]
}

model Category {
  id    Int                 @id @default(autoincrement())
  name  String
  books CategoriesOnBooks[]
}

model User {
  id    Int            @id @default(autoincrement())
  email String         @unique
  name  String
  books UsersOnBooks[]
  Book  Book[]
}

model Book {
  id          Int                 @id @default(autoincrement())
  title       String
  description String?
  pages       Int?
  cover       String?
  authors     AuthorsOnBooks[]
  categories  CategoriesOnBooks[]
  users       UsersOnBooks[]
  addedBy     User?               @relation(fields: [userId], references: [id])
  userId      Int?
}

model CategoriesOnBooks {
  book       Book     @relation(fields: [bookId], references: [id])
  bookId     Int
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int

  @@id([bookId, categoryId])
}

model AuthorsOnBooks {
  book     Book   @relation(fields: [bookId], references: [id])
  bookId   Int
  author   Author @relation(fields: [authorId], references: [id])
  authorId Int

  @@id([bookId, authorId])
}

model UsersOnBooks {
  book       Book          @relation(fields: [bookId], references: [id])
  bookId     Int
  user       User          @relation(fields: [userId], references: [id])
  userId     Int
  status     ReadingStatus @default(NOT_STARTED)
  pageNumber Int?

  @@id([bookId, userId])
}

enum ReadingStatus {
  NOT_STARTED
  IN_PROGRESS
  FINISHED
}
